{
    "section-sidebar.sublime-snippet": {
        "prefix": "@section-sidebar",
        "body": [
            "@section('sidebar')",
            "This is the master sidebar.",
            "@show"
        ],
        "description": "Defining A Layout."
    },
    "yield.sublime-snippet": {
        "prefix": "@yield",
        "body": [
            "@yield('content')"
        ],
        "description": "Defining A Layout."
    },
    "extends.sublime-snippet": {
        "prefix": "@extends",
        "body": [
            "@extends('layouts.app')"
        ],
        "description": "Defining A Layout."
    },
    "section-title.sublime-snippet": {
        "prefix": "@section-title",
        "body": [
            "@section('title', 'Page Title')"
        ],
        "description": "Defining A Layout."
    },
    "section-content.sublime-snippet": {
        "prefix": "@section-content",
        "body": [
            "@section('content')",
            "<p>This is my body content.</p>",
            "@endsection"
        ],
        "description": "Defining A Layout."
    },
    "component.sublime-snippet": {
        "prefix": "@component",
        "body": [
            "@component('alert')",
            "<strong>Whoops!</strong> Something went wrong!",
            "@endcomponent"
        ],
        "description": "Components & Slots."
    },
    "component-slot.sublime-snippet": {
        "prefix": "@component-slot",
        "body": [
            "@component('alert')",
            "    @slot('title')",
            "        Forbidden",
            "    @endslot",

            "        You are not allowed to access this resource!",
            "@endcomponent"
        ],
        "description": "Components & Slots."
    },
    "component-Data.sublime-snippet": {
        "prefix": "@component-Data",
        "body": [
            "@component('alert', ['foo' => 'bar'])",
            "    ...",
            "@endcomponent"
        ],
        "description": "Passing Additional Data To Components."
    },
    "alert-type.sublime-snippet": {
        "prefix": "@alert-type",
        "body": [
            "@alert(['type' => 'danger'])",
            "    You are not allowed to access this resource!",
            "@endalert"
        ],
        "description": "Aliasing Components."
    },
    "alert.sublime-snippet": {
        "prefix": "@alert",
        "body": [
            "@alert",
            "    You are not allowed to access this resource!",
            "@endalert"
        ],
        "description": "Aliasing Components."
    },
    "verbatim.sublime-snippet": {
        "prefix": "@verbatim",
        "body": [
            "@verbatim",
            "    <div class='container'>",
            "         Hello, {{ name }}.",
            "    </div>",
            "@endverbatim"
        ],
        "description": "Blade & JavaScript Frameworks."
    },
    "if.sublime-snippet": {
        "prefix": "@if",
        "body": [
            "@if (count($records) === 1)",
            "    I have one record!",
            "@elseif (count($records) > 1)",
            "    I have multiple records!",
            "@else",
            "    I don't have any records!",
            "@endif"
        ],
        "description": "If Statements."
    },
    "unless.sublime-snippet": {
        "prefix": "@unless",
        "body": [
            "@unless (Auth::check())",
            "    You are not signed in.",
            "@endunless"
        ],
        "description": "If Statements."
    },
    "isset.sublime-snippet": {
        "prefix": "@isset",
        "body": [
            "@isset($records)",
            "    // $records is defined and is not null...",
            "@endisset"
        ],
        "description": "If Statements."
    },
    "empty.sublime-snippet": {
        "prefix": "@empty",
        "body": [
            "@empty($records)",
            "    // $records is "empty"...",
            "@endempty"
        ],
        "description": "If Statements."
    },
    "auth.sublime-snippet": {
        "prefix": "@auth",
        "body": [
            "@auth",
            "     // The user is authenticated...",
            "@endauth"
        ],
        "description": "Authentication Directives."
    },
    "guest.sublime-snippet": {
        "prefix": "@guest",
        "body": [
            "@guest",
            "    // The user is not authenticated...",
            "@endguest"

        ],
        "description": "Authentication Directives."
    },
    "auth-admin.sublime-snippet": {
        "prefix": "@auth('admin')",
        "body": [
            "@auth('admin')",
            "    // The user is authenticated...",
            "@endauth"

        ],
        "description": "Authentication Directives."
    },
    "guest-admin.sublime-snippet": {
        "prefix": "@guest('admin')",
        "body": [
            "@guest('admin')",
            "    // The user is not authenticated...",
            "@endguest"

        ],
        "description": "Authentication Directives."
    },
    "hasSection.sublime-snippet": {
        "prefix": "@hasSection",
        "body": [
            "@hasSection('navigation')",
            "    <div class='pull-right'>",
            "         @yield('navigation')",
            "    </div>",

            "    <div class='clearfix'></div>",
            "@endif"

        ],
        "description": "Section Directives."
    },
    "switch.sublime-snippet": {
        "prefix": "@switch",
        "body": [
            "@switch($i)",
            "    @case(1)",
            "         First case...",
            "        @break",

            "    @case(2)",
            "        Second case...",
            "        @break",

            "     @default",
            "        Default case...",
            "@endswitch"

        ],
        "description": "Switch Statements."
    },
    "for.sublime-snippet": {
        "prefix": "@for",
        "body": [
            "@for ($i = 0; $i < 10; $i++)",
            "    The current value is {{ $i }}",
            "@endfor"

        ],
        "description": "Loops."
    },
    "foreach.sublime-snippet": {
        "prefix": "@foreach",
        "body": [
           " @foreach ($users as $user)",
            "    <p>This is user {{ $user->id }}</p>",
            "@endforeach"

        ],
        "description": "Loops."
    },
    "forelse.sublime-snippet": {
        "prefix": "@forelse",
        "body": [
            "@forelse ($users as $user)",
            "    <li>{{ $user->name }}</li>",
            "@empty",
            "    <p>No users</p>",
            "@endforelse"

        ],
        "description": "Loops."
    },
    "while.sublime-snippet": {
        "prefix": "@while",
        "body": [
            "@while (true)",
            "    <p>I'm looping forever.</p>",
            "@endwhile"

        ],
        "description": "Loops."
    },
    "foreach-if.sublime-snippet": {
        "prefix": "@foreach-if",
        "body": [
            "@foreach ($users as $user)",
            "    @if ($user->type == 1)",
            "        @continue",
            "    @endif",

            "    <li>{{ $user->name }}</li>",

            "    @if ($user->number == 5)",
            "        @break",
            "    @endif",
            "@endforeach"

        ],
        "description": "Loops."
    },
    "include.sublime-snippet": {
        "prefix": "@include",
        "body": [
           " @include('shared.errors')"
        ],
        "description": "Including Sub-Views."
    },
    "include-data.sublime-snippet": {
        "prefix": "@include-data",
        "body": [
           "@include('view.name', ['some' => 'data'])"
        ],
        "description": "Including Sub-Views."
    },
    "includeIf.sublime-snippet": {
        "prefix": "@includeIf",
        "body": [
           "@includeIf('view.name', ['some' => 'data'])"
        ],
        "description": "Including Sub-Views."
    },
    "includeWhen.sublime-snippet": {
        "prefix": "@includeWhen",
        "body": [
           "@includeWhen($boolean, 'view.name', ['some' => 'data'])"
        ],
        "description": "Including Sub-Views."
    },
    "includeFirst.sublime-snippet": {
        "prefix": "@includeFirst",
        "body": [
           "@includeFirst(['custom.admin', 'admin'], ['some' => 'data'])"
        ],
        "description": "Including Sub-Views."
    },
    "each.sublime-snippet": {
        "prefix": "@each",
        "body": [
           "@each('view.name', $jobs, 'job')"
        ],
        "description": "Including Sub-Views."
    },
    "each.view.empty.sublime-snippet": {
        "prefix": "@each.view.empty",
        "body": [
           "@each('view.name', $jobs, 'job', 'view.empty')"
        ],
        "description": "Including Sub-Views."
    },
    "push.sublime-snippet": {
        "prefix": "@push",
        "body": [
            "@push('scripts')",
            "    <script src='/example.js'></script>",
            "@endpush"
        ],
        "description": "Stacks."
    },
    "stack.sublime-snippet": {
        "prefix": "@stack",
        "body": [
            "@stack('scripts')"
        ],
        "description": "Stacks."
    },
    "prepend.sublime-snippet": {
        "prefix": "@prepend",
        "body": [
            "@prepend('scripts')",
            "    This will be first...",
            "@endprepend"
        ],
        "description": "Stacks."
    },
    "inject.sublime-snippet": {
        "prefix": "@inject",
        "body": [
            "@inject('metrics', 'App/\/Services/\/MetricsService')"
        ],
        "description": "Stacks."
    },
    "env.sublime-snippet": {
        "prefix": "@env",
        "body": [
            "@env('local')",
            "    // The application is in the local environment...",
            "@elseenv('testing')",
            "    // The application is in the testing environment...",
            "@else",
            "    // The application is not in the local or testing environment...",
            "@endenv"
        ],
        "description": "Service Injection."
    }

}